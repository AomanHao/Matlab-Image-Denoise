clc;clear;
N=1000;    %信号点数
M=8;     %滤波器阶数
snr=20;
Hn =[0.8783   -0.5806    0.6537   -0.3223    0.6577   -0.0582   0.2895   -0.2710    0.1278   -0.1508    0.0238   -0.1814   0.2519   -0.0396    0.0423   -0.0152    0.1664   -0.0245   0.1463   -0.0770    0.1304   -0.0148    0.0054   -0.0381    0.0374   -0.0329    0.0313   -0.0253    0.0552  -0.0369   0.0479   -0.0073    0.0305   -0.0138    0.0152   -0.0012  0.0154   -0.0092    0.0177   -0.0161    0.0070   -0.0042  0.0051   -0.0131    0.0059   -0.0041    0.0077   -0.0034   0.0074   -0.0014    0.0025   -0.0056    0.0028   -0.0005   0.0033   -0.0000    0.0022   -0.0032    0.0012   -0.0020   0.0017   -0.0022    0.0004   -0.0011      0          0   ];
Hn=Hn(1:M);
for k=1:N         
    x(k)=sin(k*2*pi/N)+2;    %产生信号x
end
noise=0.3*randn(1,N);        %产生高斯随机白噪声
s=noise+x;%信号中加入噪声作为输入信号
d=x;           %期望输出响应=原信号
w1=zeros(M,1);  %滤波器的抽头权系数初值为0
w2=zeros(M,1);
y1=zeros(N,1);  %滤波后的输出数组
y2=zeros(N,1);
r=sign(rand(N,1)-0.5); 
d=conv(r,Hn); 
d=awgn(d,snr,'measured');
%%%%%%%%%%%%%%%%%LMS算法%%%%%%%%%%%%%%%%%%%%%%%%
    %1.基本LMS算法：μ1(n）=常数 2.变步长LMS算法：μ2(n）=变量
 u1=0.00001;   
 u2=zeros(1,N);
for i=1:N-M
    for n=1:M     
            y1(i)=y1(i)+w1(n,1)*s(n+i-1);   %输出=滤波器权系数*输入
            y2(i)=y2(i)+w2(n,1)*s(n+i-1);
    end
    e1(i)=d(i)-y1(i); %估计误差
    e2(i)=d(i)-y2(i);
    j(i)=e2(i)*s(i);  %变步长的计算公式  误差标准
    a=0.001;
    b=0.05;
    u2(i)=b*[1-exp(-a*abs(j(i)))];
    for n=1:M
        w1(n,1)=w1(n,1)+u1*e1(i)*s(n+i-1);
        w2(n,1)=w2(n,1)+u2(i)*e2(i)*s(n+i-1);
        %校正滤波器权系数w
    end
end
e1(i)=abs(e1(i)^2);
e2(i)=abs(e2(i)^2);
out1=y1;
out2=y2;
figure(1);
subplot(1,4,1);        %分别画出原信号，加入噪声的混合信号，滤波后的输出信号
plot(x);
subplot(1,4,2);
plot(s);
subplot(1,4,3);
title('LMS自适应算法滤波器 滤波后的信号');
plot(out1,'r');hold on
plot(out2,'g');
subplot(1,4,4);
plot(e1,'r');hold on
plot(e2,'g');



